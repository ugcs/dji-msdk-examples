// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        app_compileSdkVersion = 29
        app_minSdkVersion = 21
        app_targetSdkVersion = 29

        gradle_version = '3.6.0'
        java_version = JavaVersion.VERSION_1_8
        kotlin_version = '1.4.0'

        dji_sdk_version = "4.16.1"
        dji_uxsdk_version = "4.16"

        multidex_version = "2.0.1"
        android_core_ktx = "1.3.1"
        fragment_ktx_version = "1.2.5"
        timber_version = '4.7.1'
        play_services_version_maps = '17.0.0'
        play_services_version_location = '17.0.0'
        play_services_version_ads = '15.0.1'
        android_core_ktx = "1.3.1"
        timber_version = '4.7.1'
        play_services_version = '15.0.1'
        support_lib_version = '28.0.3'
        support_multidex_version = '1.0.3'
        lifecycle_extensions_version = "2.2.0"
        mapbox_maps_version = '8.6.2'
        protobuf_lite_version = '3.0.1'
        protobuf_version = "0.8.8"
        okhttp_version = "2.7.5"
        gson_version = "2.8.6"
        annotation_version = "1.1.0"
        support_v4_version = "1.0.0"
        material_version = "1.2.0"
        appcompat_version = "1.2.0"
        recyclerview_version = "1.1.0"
        preference_version = "1.1.1"
        constraintlayout_version = "1.1.3"
        slf4j_version = "1.7.12"
        core_ktx_version = "1.7.12"
        guava_version = "20.0"
        otto_version = "1.3.8"
        localbroadcastmanager_version = "1.0.0"
    }

    repositories {
        maven {
            url "https://maven.google.com"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        google()
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "com.google.protobuf:protobuf-gradle-plugin:$protobuf_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.com.github.spotbugs.snom:spotbugs-gradle-plugin:4.4.4"
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    //Logging levels
    logLevelVerbose = 2
    logLevelDebug = 3
    logLevelInfo = 4
    logLevelWarn = 5
    logLevelError = 6
    logLevelAssert = 7
}

def computeVersionCode(int versionMajor, int versionMinor, int versionBuild) {
    return versionMajor * 1000000 + versionMinor * 10000 + versionBuild
}

def generateVersionName(int versionMajor, int versionMinor, int versionBuild) {
    return "${versionMajor}.${versionMinor}.${versionBuild}"
}

// Android Apps certificate
def getAndroidAppsKeystoreFile() {
    def filePath = hasProperty('COM_UGCS_ANDROID_APPS_KEYSTORE') ? COM_UGCS_ANDROID_APPS_KEYSTORE : null
    return filePath ? file(filePath) : null
}

def getAndroidAppsKeystorePassword() {
    return hasProperty('COM_UGCS_ANDROID_APPS_KEYSTORE_PWD') ? COM_UGCS_ANDROID_APPS_KEYSTORE_PWD : ''
}

def getAndroidAppsKeyAlias() {
    return hasProperty('COM_UGCS_ANDROID_APPS_KEY_ALIAS') ? COM_UGCS_ANDROID_APPS_KEY_ALIAS : ''
}

def getAndroidAppsKeyPassword() {
    return hasProperty('COM_UGCS_ANDROID_APPS_KEY_PWD') ? COM_UGCS_ANDROID_APPS_KEY_PWD : ''
}

// Android PH Apps certificate
def getAndroidPhAppsKeystoreFile() {
    def filePath = hasProperty('COM_UGCS_ANDROID_PH_APPS_KEYSTORE') ? COM_UGCS_ANDROID_PH_APPS_KEYSTORE : null
    return filePath ? file(filePath) : null
}
